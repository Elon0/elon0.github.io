<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Elon的blog</title>
    <link>https://elon0.github.io/post/</link>
    <description>Recent content in Posts on Elon的blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 09 Oct 2019 10:32:29 +0800</lastBuildDate>
    
	<atom:link href="https://elon0.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>手撸算法</title>
      <link>https://elon0.github.io/post/%E6%89%8B%E6%92%B8%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 09 Oct 2019 10:32:29 +0800</pubDate>
      
      <guid>https://elon0.github.io/post/%E6%89%8B%E6%92%B8%E7%AE%97%E6%B3%95/</guid>
      <description>手写二分查找递归、非递归 递归 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 private static int find(Comparable[] arr, int l, int r, Comparable target){ if( l &amp;gt; r ) return -1; int mid = l + (r-l)/2; if( arr[mid].compareTo(target) == 0 ) return mid; else if( arr[mid].compareTo(target) &amp;gt;</description>
    </item>
    
    <item>
      <title>Java秒杀系统方案</title>
      <link>https://elon0.github.io/post/java%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 04 Oct 2019 22:14:01 +0800</pubDate>
      
      <guid>https://elon0.github.io/post/java%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F%E6%96%B9%E6%A1%88/</guid>
      <description>高并发实现: 用到的技术 实现的模块 集成redis: 1:添加redis依赖,添加Fastjson依赖（用于序列化） 2:加载redis配置文件(R</description>
    </item>
    
    <item>
      <title>GitHub骚操作</title>
      <link>https://elon0.github.io/post/github%E9%AA%9A%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 02 Oct 2019 03:08:07 +0800</pubDate>
      
      <guid>https://elon0.github.io/post/github%E9%AA%9A%E6%93%8D%E4%BD%9C/</guid>
      <description>1 开启 1 面试题 2 如何找到优秀的源码+进行深度的框架解读+学习其他高手的代码+自己共享贡献 2 常用词 watch：会持续收到该项目的动态 fork：</description>
    </item>
    
    <item>
      <title>Hugo主题Even</title>
      <link>https://elon0.github.io/post/hugo%E4%B8%BB%E9%A2%98even/</link>
      <pubDate>Tue, 01 Oct 2019 02:52:42 +0800</pubDate>
      
      <guid>https://elon0.github.io/post/hugo%E4%B8%BB%E9%A2%98even/</guid>
      <description>介绍 用 olOwOlo/hugo-theme-even 来作模板，主要是自带文章目录。 准备 如果需要修改主题，那么需要安装 node 与 yarn 构建。 1 2 3 4 5 6 7 8 brew install node brew install yarn cd ./themes/even/ # install dependencies yarn install # build yarn build 发现执</description>
    </item>
    
    <item>
      <title>JVM面试</title>
      <link>https://elon0.github.io/post/jvm%E9%9D%A2%E8%AF%95/</link>
      <pubDate>Mon, 30 Sep 2019 14:22:00 +0800</pubDate>
      
      <guid>https://elon0.github.io/post/jvm%E9%9D%A2%E8%AF%95/</guid>
      <description>JVM 面试 栈管运行，堆管存储 JVM 垃圾回收的时候如何确定垃圾？知道什么是 GC Roots ? 什么是垃圾 简单来说就是内存中已经不在被使用到的空间就是垃圾 要进行垃圾回</description>
    </item>
    
    <item>
      <title>Java并发编程</title>
      <link>https://elon0.github.io/post/java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Mon, 30 Sep 2019 13:08:48 +0800</pubDate>
      
      <guid>https://elon0.github.io/post/java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/</guid>
      <description>Java 并发编程 请谈谈你对 volatile 的理解 volatile 是 Java 虚拟机提供的轻量级的同步机制 保证可见性 禁止指令排序 不保证原子性 JMM（Java 内存模型） 你谈谈 基本概念 JMM 本</description>
    </item>
    
  </channel>
</rss>